{
   "wsagger": "index",

   "0001.userCreateConnection.wsagger.json": {
      "tags": [
         "Node"
      ],
      "name": "Create connection for current token"
   },
   "0002.userDeleteConnection.wsagger.json": {
      "tags": [
         "Node"
      ],
      "name": "Delete connection"
   },
   "0003.userCreateAccessTokenUsingSocialAccount.wsagger.json": {
      "tags": [
         "AnyBody"
      ],
      "name": "Create access token for APP using social account",
      "description": "<p><b>facebook:</b> <a href='https://developers.facebook.com/tools/accesstoken/'>https://developers.facebook.com/tools/accesstoken/</a></p><p><b>google+:</b> <a href='https://developers.google.com/oauthplayground/'>https://developers.google.com/oauthplayground/</a></p><br><p>For IOS needed \"device_id\" header.</p>"
   },
   "login.wsagger.json": {
      "tags": [
         "AnyBody"
      ],
      "name": "Create access token for APP",
      "description": "<p>For IOS needed \"device_id\" header.</p>"
   },
   "0005.userDeleteAccessToken.wsagger.json": {
      "tags": [
         "User"
      ],
      "name": "Delete access token for APP"
   },
   "0006.userGameAgain.wsagger.json": {
      "tags": [
         "Game"
      ],
      "name": "Start game again (use timeout)"
   },
   "0007.userGameReject.wsagger.json": {
      "tags": [
         "Game"
      ],
      "name": "Reject games invite"
   },
   "0008.userMatchHistory.wsagger.json": {
      "tags": [
         "Game"
      ],
      "name": "Getting match history"
   },
   "0009.userGameJoin.wsagger.json": {
      "tags": [
         "Game"
      ],
      "name": "Join into the game"
   },
   "0010.userGameStageCreate.wsagger.json": {
      "tags": [
         "Game"
      ],
      "name": "Create user stage for game"
   },
   "0011.userFriendsGame.wsagger.json": {
      "tags": [
         "Game"
      ],
      "name": "Start game with friend"
   },
   "0012.readNotification.wsagger.json": {
      "tags": [
         "Notification"
      ],
      "name": "Set status read to notification"
   },
   "0013.readNotification.wsagger.json": {
      "tags": [
         "Notification"
      ],
      "name": "Delete notification"
   },
   "0014.userFriendsList.wsagger.json": {
      "tags": [
         "User"
      ],
      "name": "Get friends list"
   },
   "0015.userFriendsList.wsagger.json": {
      "tags": [
         "User"
      ],
      "name": "Add user to friends list"
   },
   "0016.userCreateInvite.wsagger.json": {
      "tags": [
         "User"
      ],
      "name": "Create invite for user"
   },
   "0017.userListForAutocomplete.wsagger.json": {
      "tags": [
         "User"
      ],
      "name": "Get users by email for autocomplete"
   },
   "0018.userCreate.wsagger.json": {
      "tags": [
         "AnyBody"
      ],
      "name": "Create user for APP",
      "description": "Create user for APP via e-mail and password"
   },
   "0019.userCurrentUpdate.wsagger.json": {
      "tags": [
         "User"
      ],
      "name": "Update current user for APP"
   },
   "0020.userConfirmEmail.wsagger.json": {
      "tags": [
         "Email"
      ],
      "name": "Confirm e-mail by token"
   },
   "0021.userConfirmEmailByToken.wsagger.json": {
      "tags": [
         "Email"
      ],
      "name": "Confirm email by token"
   },
   "0022.userCurrent.wsagger.json": {
      "tags": [
         "User"
      ],
      "name": "Current user for APP"
   },
   "0023.userResetPasswordSendToken.wsagger.json": {
      "tags": [
         "Password"
      ],
      "name": "User reset password send token"
   },
   "0024.user-reset-password.wsagger.json": {
      "tags": [
         "Password"
      ],
      "name": "User reset password by token"
   },
   "0025.userProfileCreate.wsagger.json": {
      "tags": [
         "User"
      ],
      "name": "Create profile for user",
      "description": "Create profile for user. User token in header required."
   },
   "0026.userProfileGet.wsagger.json": {
      "tags": [
         "User"
      ],
      "name": "Get profile identity of user",
      "description": "Get profile identity of user. User token in header required."
   }
}